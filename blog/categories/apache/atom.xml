<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Apache | Bowen's Blog]]></title>
  <link href="http://iambowen.github.com/blog/categories/apache/atom.xml" rel="self"/>
  <link href="http://iambowen.github.com/"/>
  <updated>2015-12-17T17:31:09+08:00</updated>
  <id>http://iambowen.github.com/</id>
  <author>
    <name><![CDATA[Bowen Ma]]></name>
    <email><![CDATA[iambowen.m@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Apache Rewrite Rules]]></title>
    <link href="http://iambowen.github.com/apache/2015/01/27/apache-rewrite-rules"/>
    <updated>2015-01-27T00:00:00+08:00</updated>
    <id>http://iambowen.github.com/apache/2015/01/27/apache-rewrite-rules</id>
    <content type="html"><![CDATA[<h3>什么是Apache</h3>

<hr />

<p><a href="http://httpd.apache.org/">Apache</a>是一款开源的HTTP服务器，长期占据服务器市场第一名的位置。</p>

<h3>什么是URL rewriting</h3>

<hr />

<p>有时候，为了让URL对用户友好，方便记忆，或是SEO优化，我们会使用更加简单的URL，比如<a href="http://example.com/help.html">http://example.com/help.html</a>
但是实际开发人员命名的静态html文件名为help_2014_12_12.html,在这种情况下，就需要重写URL，让服务器
返回正确的页面(只是个例子)，亦或是原来的页面更换了新的域名，需要告诉搜索引擎或者浏览器新的地址，都需要
重写URL。URL重写后，会返回给浏览器重写后的链接以及3xx的返回码，然后浏览器会请求重写后链接的内容。</p>

<h3>301 和 302的区别</h3>

<hr />

<ul>
<li><em>301</em>: 永久性转移(Permanently Moved)</li>
<li><em>302</em>: 暂时性转移(Temporarily Moved)</li>
</ul>


<p>从效果上来讲它们都会造成跳转，区别在于SEO。如果是301跳转，那么搜索引擎将A页面的Pagerank导入
到跳转后的B页面，搜索引擎以后会忽略A页面，只在搜索结果中显示B页面。如果是302跳转，搜索引擎会保留A页面
的PR，但是显示的内容可能B页面的。</p>

<h3>Apache rewrite module</h3>

<hr />

<p><a href="http://httpd.apache.org/docs/current/mod/mod_rewrite.html">mod_rewrite</a>是Apache中提供得基于规则的rewriting引擎，加载模块后重启apache就可以使用了。</p>

<pre><code class="bash">vagrant@vagrant-ubuntu-trusty-64:~$ apachectl -t -D DUMP_MODULES | grep rewrite
# 如果没有加载
vagrant@vagrant-ubuntu-trusty-64:~$ a2enmod rewrite
Enabling module rewrite.
Could not create /etc/apache2/mods-enabled/rewrite.load: Permission denied
vagrant@vagrant-ubuntu-trusty-64:~$ sudo a2enmod rewrite
Enabling module rewrite.
To activate the new configuration, you need to run:
service apache2 restart
vagrant@vagrant-ubuntu-trusty-64:~$ less /etc/apache2/mods-enabled/rewrite.load
LoadModule rewrite_module /usr/lib/apache2/modules/mod_rewrite.so
</code></pre>

<p>在<code>http.conf</code>文件中可以引用具体的rewrite规则文件，如下</p>

<pre><code class="bash">RewriteEngine on
RewriteLog /var/log/www/server.rewrite.log
RewriteLogLevel 1
Include /web/conf/httpd/conf.d/rewrites.conf
</code></pre>

<p>根据需求将rewrite的规则写入<code>rewrites.conf</code>中即可。</p>

<h3>rewrite配置文件的写法</h3>

<p>基本上来说，重写URL就是在<code>􏰭􏰆􏰖􏰉􏰃􏰏􏰆􏰓􏰊􏰕􏰌RewriteCond</code>下，执行自定义的<code>RewriteRule</code>，通过Server Variables
以及正则等匹配的方式，返回结果以及正确的返回码。</p>

<h2>域名的转换</h2>

<pre><code class="apache">RewriteCond  %{HTTP_HOST}   ^www\.example\.com$  [NC]
RewriteRule  ^(.*)$         http://www.example2.com/$1  [R=301,L]
</code></pre>

<p>第一行是触发URL重写的条件，Flag <code>NC</code> 表示匹配时无视大小写，第二行表示在前一个条件满足时重写URL，
同时返回<code>301</code>, <code>L</code>表示本次重写URL的行为结束。</p>

<h3>临时更改页面地址</h3>

<pre><code class="apache">RewriteRule ^page.html$   new_page.html   [R=302,L]
</code></pre>

<h3>更改 Query String</h3>

<pre><code class="apache">RewriteCond %{QUERY_STRING} a=something
RewriteCond %{QUERY_STRING} b=(else1|else2)
RewriteRule ^/some_query_here$ http://www.example3.com/redirect? [R=301,L]
</code></pre>

<p>在Query String匹配 &ldquo;a=something"的前提下，如果后面的Query String匹配<code>b=else1</code>或者<code>b=else2</code>
则重写URL，<code>?</code>表示截断URL。</p>

<p>最近在做一张卡的时候，要重写的URL类似</p>

<pre><code>http://www.example.com/#category=Water Ball
</code></pre>

<p>如果直接将URL写在RewriteRule里面，Apache缺省会将URL中的特殊字符转义，比如会变成</p>

<pre><code>http://www.example.com/%23category=Water%20Ball
</code></pre>

<p>要防止Apache将其转义，可以在Flag中加<code>NE</code>，同时注意Flag之间不能有空格。</p>

<pre><code class="apache">RewriteCond %{QUERY_STRING} b=something
RewriteRule ^/some_query_here$ http://www.example.com/#category=Walter\ Ball? [R=301,NE,L]
</code></pre>

<h3>体会</h3>

<p>Apache的URL重写规则感觉还是比较简单，而且很强大。</p>

<h3>references</h3>

<ol>
<li><a href="https://www.addedbytes.com/articles/for-beginners/url-rewriting-for-beginners/">rewriting for beginners</a></li>
<li><a href="http://www.addedbytes.com/apache/mod_rewrite-cheat-sheet/">rewrite cheat sheet</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
